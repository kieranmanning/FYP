%module main:MIdent
  %rec
  {fac :: Int -> Int =
     \ (d0::Int) -> %case Int d0 %of (wildX4::Int)

           {Types.Izh (d1::Int) -> %case Types.Int d1 %of (d6::Int)

                 {%_ ->
                    * @ Int NumInt wildX4 (- @ Types.Int Int (fac wildX4) (Types.Izh (1::Int));
                 
                 (0::Int) ->
                    Types.Izh (1::Int)}}};

main :: Types.Int =
    fac
    (Types.Izh (4::Int));
