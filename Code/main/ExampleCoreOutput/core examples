   

function = \x y z -> x + y + z

\ (x::type.Integer) (y::type.Integer) (zzaeK::type.Integer)
        -> op.zp @ type.Integer op.zdfNumInteger (op.zp @ type.Integer op.zdfNumInteger x y) z;


function x y = x + y =>

\ @ aaif
      (zddNumaig::base:GHCziNum.Num aaif)
      (xaeH::aaif)
      (yaeI::aaif) ->
        base:GHCziNum.zp @ aaif zddNumaig xaeH yaeI;